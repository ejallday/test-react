{"version":3,"sources":["PasswordInput.js","TextInput.js","App.js","index.js"],"names":["PasswordInput","console","log","react_default","a","createElement","type","React","Component","TextInput","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleClick","setState","_ref","count","toggleInput","version","state","input","_this$state","src_TextInput","id","concat","key","src_PasswordInput","onClick","ReactDOM","render","src_App","document","getElementById"],"mappings":"oMAeeA,iMAVXC,QAAQC,IAAI,6DAIZ,OACEC,EAAAC,EAAAC,cAAA,SAAOC,KAAK,oBARUC,IAAMC,WCanBC,iMAVXR,QAAQC,IAAI,yDAIZ,OACEC,EAAAC,EAAAC,cAAA,SAAOC,KAAK,gBARMC,IAAMC,WC+CfE,cA5Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,YAAc,WACZP,EAAKQ,SAAS,SAAAC,GAAA,MAA6B,CACzCC,MADYD,EAAGC,MACA,EACfC,aAFYF,EAAUE,gBARxBtB,QAAQC,IAAIK,IAAMiB,SAClBZ,EAAKa,MAAQ,CACXF,aAAa,EACbD,MAAO,GALQV,wEAgBV,IAEHc,EAFGC,EACwBZ,KAAKU,MAA5BH,EADDK,EACCL,MASR,OALEI,EALKC,EACQJ,YAILpB,EAAAC,EAAAC,cAACuB,EAAD,CAAWC,GAAE,SAAAC,OAAWR,GAASS,IAAKT,IAEtCnB,EAAAC,EAAAC,cAAC2B,EAAD,CAAeH,GAAE,SAAAC,OAAWR,GAASS,IAAKT,IAIlDnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,sEACAF,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,2DAEAF,EAAAC,EAAAC,cAAA,UAAQ4B,QAASlB,KAAKI,aAAtB,YACAhB,EAAAC,EAAAC,cAAA,WACEqB,UAxCQnB,IAAMC,WCCxB0B,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.70fc1c39.chunk.js","sourcesContent":["import React from 'react'\n\nclass PasswordInput extends React.Component {\n\n  componentWillUnmount(){\n    console.log('Unmounting PasswordInput')\n  }\n\n  render() {\n    return (\n      <input type=\"password\" />\n    )\n  }\n}\n\nexport default PasswordInput;\n","import React from 'react'\n\nclass TextInput extends React.Component {\n\n  componentWillUnmount(){\n    console.log('Unmounting TextInput')\n  }\n\n  render() {\n    return (\n      <input type=\"text\" />\n    )\n  }\n}\n\nexport default TextInput;\n","import React from 'react'\nimport PasswordInput from './PasswordInput'\nimport TextInput from './TextInput'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    console.log(React.version)\n    this.state = {\n      toggleInput: true,\n      count: 1\n    }\n  }\n\n  toggleClick = () => {\n    this.setState(({ count, toggleInput }) => ({\n      count: count + 1,\n      toggleInput: !toggleInput,\n    }))\n  }\n\n  render() {\n    const { count, toggleInput } = this.state\n    let input\n\n    if (toggleInput){\n      input = <TextInput id={`count-${count}`} key={count} />\n    } else {\n      input = <PasswordInput id={`count-${count}`} key={count} />\n    }\n\n    return (\n      <div>\n        <h1>Memory Leak Demo</h1>\n        <h2>Steps to reproduce</h2>\n        <h3>1. Open dev tools, click memory tab, and take a snapshot</h3>\n        <h3>2. Click the button below a bunch of times and take another snapshot</h3>\n        <h3>3. Search Snapshots for \"Detached\"</h3>\n        <h3>4. Click the Garbage Collect button</h3>\n        <h3>5. Take another snapshot & veiw \"Detached\"</h3>\n        <h3>6. Rinse and repeat as many times as you like</h3>\n\n        <button onClick={this.toggleClick}>Click Me</button>\n        <br/>\n        { input }\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}